{
    "compilerOptions": {
        "target": "ES2015",                     // 指定ECMAScript目标版本
        "useDefineForClassFields": true,
        "module": "esnext",                     // 指定生成哪个模块系统代码： "None"， "CommonJS"， "AMD"， "System"， "UMD"， "ES6"或 "ES2015"
        "moduleResolution": "node",             // 模块解析模式， node模式， Classic默认模式
        "strict": true,                         // 启用所有严格类型检查选项
        "jsx": "preserve",
        "sourceMap": true,                      // 生成.map文件
        "resolveJsonModule": true,              // JSON解析为模块
        "isolatedModules": true,                // 将每个文件作为单独的模块
        "esModuleInterop": true,
        "lib": ["esnext", "dom"],               // 编译过程中需要引入的库文件的列表
        "skipLibCheck": true,                   // 忽略所有的声明文件（ *.d.ts）的类型检查
        "allowSyntheticDefaultImports": true,   // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
        "allowUnreachableCode": true,           // 不报告执行不到的代码错误
        "alwaysStrict": false,                  // 以严格模式解析并为每个源文件生成 "use strict"语句
        "allowJs": false,                       // 允许编译javascript文件
        "checkJs": false,                       // 报告js文件中的错误
        "types": ["element-plus/global"]        // 引入 element plus 类型
    },
    
    "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue", "auto-imports.d.ts"],
    "exclude": [""],
    "references": [{ "path": "./tsconfig.node.json" }]
}
